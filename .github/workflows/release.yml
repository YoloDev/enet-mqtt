name: Release

on:
  workflow_run:
    workflows: [CI]
    branches: [main]
    types: [completed]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: ⏬ Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: 🔧 Setup git
        run: git branch -D main || true; git checkout -b main

      - name: 🔽 Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: "5.x"

      - name: 🔍 Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10
        with:
          useConfigFile: true

      - name: 🔽 Download latest earthly
        run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.5.20/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"

      - name: 🔨 Build
        run: earthly +all

      - name: 🔼 Upload build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build/

    outputs:
      version: ${{ steps.gitversion.outputs.fullSemVer }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment: release
    concurrency:
      group: release
      cancel-in-progress: true
    needs:
      - build

    steps:
      - name: 🏷️ Create GitHub Tag
        uses: actions/github-script@v4
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ needs.build.outputs.version }}",
              sha: "${{ github.event.workflow_run.head_sha }}",
            });
      - name: ⏬ Checkout
        uses: actions/checkout@v2
        with:
          ref: refs/tags/v${{ needs.build.outputs.version }}

      - name: 📝 Create changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔽 Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: 🖃 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          tag_name: v${{ needs.build.outputs.version }}
          body: ${{ needs.build.outputs.changelog }}
          files: |
            build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
